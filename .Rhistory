ifelse(str_detect(spt5$Conta,"trabalho"),"social",spt5$Conta
)))))
spt5$cat<-ifelse(str_detect(spt5$Conta,"justica"),"jus_seg",
ifelse(str_detect(spt5$Conta,"judiciaria"),"jus_seg",
ifelse(str_detect(spt5$Conta,"seguranca"),"jus_seg",
ifelse(str_detect(spt5$Conta,"cidadania"),"jus_seg",spt5$cat
))))
spt5$cat<-ifelse(str_detect(spt5$cat,"social"),"social",
ifelse(str_detect(spt5$cat,"jus_seg"),"jus-seg","demais"))
spt15<-ddply(spt5,.(cat),summarize,soma=sum(Valor))
spt15$prop<-spt15$soma/sum(spt15$soma)
View(spt15)
rep(2013:2015,3)
rep(2013:2015,each=3)
des<-cbind(ano=rep(2013:2015,each=3),spt13,spt14,spt15)
View(des)
des<-rbind(ano=rep(2013:2015,each=3),spt13,spt14,spt15)
des<-rbind(ano=rep(2013:2015,each=3),rbind(spt13,spt14,spt15))
View(des)
des<-cbind(ano=rep(2013:2015,each=3),rbind(spt13,spt14,spt15))
des<-cast(des[c(1,2,4)],ano~cat)
des_<-readRDS("~/Documents/base_sp/despesa.rds")
des_
?jitter
des_[[1]]<-rbind(des_[[1]],des)
des_
?setNames
names(des_)<-c("despesa_sp_funcao","despesa_sp_orgao")
des_
saveRDS(des_,"despesa.rds")
setwd("/Volumes/Macintosh HD/Users/josedejesusfilho/Documents/base_sp")
saveRDS(des_,"despesa.rds")
setwd("/Volumes/Macintosh HD/Users/josedejesusfilho/Documents/misc.BR")
load("/Volumes/Macintosh HD/Users/josedejesusfilho/Documents/misc.BR/.RData")
setwd("/Volumes/Macintosh HD/Users/josedejesusfilho/Documents")
knitr::opts_chunk$set(echo = TRUE,cache=F)
library(stargazer)
stargazer(fit,fit2,type = "html",align=T,out="star.html")
fit<-glm(taxa~jus_seg+taxaH+des,data=df)
temp<-tempfile()
download.file("http://cloud.josejesus.info/index.php/s/rZJZJtpnw5BO6uZ/download",temp)
df<-readRDS(temp)
fit<-glm(taxa~jus_seg+taxaH+des,data=df)
fit2<-glm(taxa~lag(jus_seg,1)+lag(taxaH,1)+des,data=df)
fit2
fit2<-glm(taxa~lag(jus_seg)+lag(taxaH)+des,data=df)
fit2
summary(fit2)
install.packages("dynlm")
library(dynlm)
fit3<-dynlm(taxa~L(jus_seg,1)+L(taxaH,1)+des,data=df)
fit3
fit3<-dynlm(taxa~jus_seg+taxaH+des,data=df)
fit3
fit3<-lm(taxa~jus_seg+taxaH+des,data=df)
fit3
df
df$demais<-df$demais/100
df$jus_seg<-df$jus_seg/100
df$social<-df$social/100
knitr::opts_chunk$set(echo = TRUE,cache=F)
fit<-glm(taxa~jus_seg+taxaH+des,data=df)
summary(fit)
fit2<-glm(taxa~lag(jus_seg,1)+lag(taxaH,1)+des,data=df)
summary(fit2)
fit2<-lm(taxa~lag(jus_seg,1)+lag(taxaH,1)+des,data=df)
summary(fit2)
fit2<-lm(taxa~lag(jus_seg,2)+lag(taxaH,2)+des,data=df)
summary(fit2)
df
fit2<-lm(taxa~lag(jus_seg)+lag(taxaH)+lag(social)+des,data=df)
summary(fit2)
fit2<-glm(taxa~lag(jus_seg)+lag(taxaH)+lag(social)+des,data=df)
summary(fit2)
fit2<-dynlm(taxa~lag(jus_seg)+lag(taxaH)+lag(social)+des,data=df)
summary(fit2)
fit2<-dynlm(taxa~L(jus_seg)+L(taxaH)+L(social)+des,data=df)
summary(fit2)
library(lavaan)
wisc4.sd <- c(3.01 , 3.03 , 2.99 , 2.89 , 2.98)
names(wisc4.sd) <-  c("Information", "Similarities", "Word.Reasoning", "Matrix.Reasoning",
"Picture.Concepts")
wisc4.sd
wisc4.cov <- cor2cov(wisc4.cor, wisc4.sd)
sd(wisc4.sd)
wisc4.cov <- cor2cov(sd(wisc4.sd), wisc4.sd)
?cor2cov()
wisc4.cov <- cor2cov(wisc4.sd)
wisc4.cor <- lower2full(c(1,0.72,1,0.64,0.63,1,0.51,0.48,0.37,1,0.37,0.38,0.38,0.38,1))
wisc4.cor <- lav_matrix_lower2full(c(1,0.72,1,0.64,0.63,1,0.51,0.48,0.37,1,0.37,0.38,0.38,0.38,1))
wisc4.cor
colnames(wisc4.cor) <- rownames(wisc4.cor) <- c("Information", "Similarities",
"Word.Reasoning", "Matrix.Reasoning", "Picture.Concepts")
wisc4.cov <- cor2cov(wisc4.cor, wisc4.sd)
wisc4.cov
wisc4.model<-'
g =~ a*Information + b*Similarities + c*Word.Reasoning + d*Matrix.Reasoning +
e*Picture.Concepts
'
wisc4.model
wisc4.fit <- cfa(model=wisc4.model, sample.cov=wisc4.cov, sample.nobs=550,
std.lv=FALSE)
library(rio)
s<-import(file.choose())
View(s)
?import
library(tidyverse)
?read_csv()
locale
locale()
Sys.getlocale()
locale("br")
locale("bra")
locale("es")
locale("BR")
locale("brazil")
locale("pt")
s<-read_csv(file.choose(),locale="pt")
s<-read_csv(file.choose(),locale="pt")
a<-s
View(a)
a$Conta<-iconv(a$Conta,from="Latin1",to="UTF8")
a<-subset(a,Conta=="14.421 - Custódia e Reintegração Social
")
a<-s
a$Conta<-iconv(a$Conta,from="Latin1",to="UTF8")
a<-subset(a,Conta==a$Conta[185])
View(a)
?read_csv
names(a)<-c("estado","ibge","uf","pop","conta","valor")
number_br<-function(str){
str<-stringr::str_replace_all(str,"\\.","")
str<-stringr::str_replace_all(str,",",".")
str<-stringr::str_trim(str)
num<-as.numeric(str)
return(num)
}
a$valor<-number_br(a$valor)
library(ggplot2)
library(cowplot)
head(a)
ggplot(a,aes(x=uf,y=valor))+geom_col(fill=valor)
ggplot(a,aes(x=uf,y=valor))+geom_col(aes(fill=valor))
a$per_capita<-a$valor/a$pop
ggplot(a,aes(x=uf,y=per_capita))+geom_col(aes(fill=per_capita))
a$uf<-with(a,reorder(uf,per_capita))
ggplot(a,aes(x=uf,y=per_capita))+geom_col(aes(fill=per_capita))
df<-readRDS(file.choose())
ll<-a
rm(a,s)
load("/Volumes/jose/R docs/Depen/base_23_11.rda")
View(a)
View(d)
View(df)
View(df2)
View(e)
View(presos)
df_s<-subset(presos,ano=="2014")
View(df_s)
rm(list=setdiff(ls(),"df_s"))
?read.csv
s<-read.csv(file.choose(),fileEncoding = "UTF8",stringsAsFactors = F,header=T)
s<-read.csv(file.choose(),fileEncoding = "UTF8",stringsAsFactors = F,header=T)
s<-read.csv(file.choose(),fileEncoding = "UTF8",stringsAsFactors = F,header=T,sep=";")
s<-read.csv(file.choose(),fileEncoding = "UTF8",stringsAsFactors = F,header=T,sep=",")
s<-read.csv(file.choose(),fileEncoding = "UTF-8",stringsAsFactors = F,header=T,dec=",")
s<-read.csv(file.choose(),fileEncoding = "UTF-8",stringsAsFactors = F,header=T,dec=",")
s<-read.csv(file.choose(),fileEncoding = "UTF-8",stringsAsFactors = F,header=T,dec=",")
?read_csv
?import
s<-import(file.choose())
View(s)
s<-read.csv(file.choose(),fileEncoding = "UTF-8",stringsAsFactors = F,header=T,dec=",")
View(s)
s<-import(file.choose())
View(s)
s[]<-iconv(unlist(s[],from="Latin1",to="UTF-8"))
s[]<-iconv(unlist(s[],from="Latin1",to="UTF8"))
s[]<-iconv(unlist(s[],from="Latin",to="UTF8"))
s[]<-iconv(unlist(s[]),from="Latin1",to="UTF-8"))
s[]<-iconv(unlist(s[]),from="Latin1",to="UTF-8")
View(s)
s<-subset(s,conta==s$conta[58])
View(s)
number_br<-function(str){
str<-stringr::str_replace_all(str,"\\.","")
str<-stringr::str_replace_all(str,",",".")
str<-stringr::str_trim(str)
num<-as.numeric(str)
return(num)
}
s$valor<-number_br(s$valor)
s<-s[c(3,6)]
View(s)
View(df_s)
names(s)
names(s)[1]<-"sigla"
s2<-left_join(s,df_s)
View(s2)
s2$gasto_preso<-s2$valor/s2$presos
names(s2)
a$sigla<-with(s2,reorder(sigla,gasto_preso))
s2$sigla<-with(s2,reorder(sigla,gasto_preso))
ggplot(s2,aes(x=siga,y=gasto_preso))
+geom_col(aes(fill=gasto_preso))
ggplot(s2,aes(x=siga,y=gasto_preso))+
geom_col(aes(fill=gasto_preso))
ggplot(s2,aes(x=sigla,y=gasto_preso))+
geom_col(aes(fill=gasto_preso))
ggplot(s2,aes(x=sigla,y=gasto_preso))+
geom_col(aes(fill=gasto_preso))+
tabs(x="UF",
y="Gastos em reais por preso em 2014",
title="Despesas dos estados com a função custódia e reintegração social em 2014",
caption="Fonte: Ministério da Justiça e Secretaria do Tesouro Nacional")
ggplot(s2,aes(x=sigla,y=gasto_preso))+
geom_col(aes(fill=gasto_preso))+
labs(x="UF",
y="Gastos em reais por preso em 2014",
title="Despesas dos estados com a função custódia e reintegração social em 2014",
caption="Fonte: Ministério da Justiça e Secretaria do Tesouro Nacional")
?scale_fill_brewer
ggplot(s2,aes(x=sigla,y=gasto_preso))+
geom_col(aes(fill=gasto_preso))+
labs(x="UF",
y="Gastos em reais por preso em 2014",
title="Despesas dos estados com a função custódia e reintegração social em 2014",
caption="Fonte: Ministério da Justiça e Secretaria do Tesouro Nacional")+
scale_fill_brewer(type="seq",palette=1,direction=-1)
ggplot(s2,aes(x=sigla,y=gasto_preso))+
geom_col(aes(fill=gasto_preso))+
labs(x="UF",
y="Gastos em reais por preso em 2014",
title="Despesas dos estados com a função custódia e reintegração social em 2014",
caption="Fonte: Ministério da Justiça e Secretaria do Tesouro Nacional")+
scale_fill_brewer(type="qual",palette=1,direction=-1)
ggplot(s2,aes(x=sigla,y=gasto_preso))+
geom_col(aes(fill=gasto_preso))+
labs(x="UF",
y="Gastos em reais por preso em 2014",
title="Despesas dos estados com a função custódia e reintegração social em 2014",
caption="Fonte: Ministério da Justiça e Secretaria do Tesouro Nacional")+
scale_fill_brewer(type="qual",palette=1)
library(RColorBrewer)
?brewer.pal
pal21<-brewer.pal(21,"Blues")
?scale_fill_manual
ggplot(s2,aes(x=sigla,y=gasto_preso))+
geom_col(aes(fill=gasto_preso))+
labs(x="UF",
y="Gastos em reais por preso em 2014",
title="Despesas dos estados com a função custódia e reintegração social em 2014",
caption="Fonte: Ministério da Justiça e Secretaria do Tesouro Nacional")+
scale_fill_manual(values=pal21,name="Gastos")
pal21
ggplot(s2,aes(x=sigla,y=gasto_preso))+
geom_col(aes(fill=gasto_preso))+
labs(x="UF",
y="Gastos em reais por preso em 2014",
title="Despesas dos estados com a função custódia e reintegração social em 2014",
caption="Fonte: Ministério da Justiça e Secretaria do Tesouro Nacional")+
guides(fill=FALSE)
library(export)
?export
?graph2doc
gg<-ggplot(s2,aes(x=sigla,y=gasto_preso))+
geom_col(aes(fill=gasto_preso))+
labs(x="UF",
y="Gastos em reais por preso em 2014",
title="Despesas dos estados com a função custódia e reintegração social em 2014",
caption="Fonte: Ministério da Justiça e Secretaria do Tesouro Nacional")+
guides(fill=FALSE)
graph2doc(x=gg,file="gg_privatiza.doc")
graph2doc(file="gg_privatiza.doc")
gg
graph2doc(file="gg_privatiza.docx")
graph2doc(gg,file="gg_privatiza.docx")
graph2doc(gg,file="gg_privatiza")
devtools::install_github("tomwenseleers/export")
library(export)
remove("export")
remove.packages("export")
library(export)
saveRDS(gg,"gg.rds")
save.image("gg_priva.rda")
install.packages("h2o", type="source", repos=(c("http://h2o-release.s3.amazonaws.com/h2o/rel-tutte/2/R")))
sc <- spark_connect(master = "local")
library(sparklyr)
sc <- spark_connect(master = "local")
base<-readRDS("base_completa_para_regressao.rds")
base_tbl<-copy_to(sc,base,"base",overwrite = T)
mod_dataset <- base_tbl %>%
sdf_register("mod_dataset")
summarise(mod_dataset, n())
partitions <- mod_dataset %>% sdf_partition(training = 0.9, test = 0.1, seed = 42)
training <- as_h2o_frame(sc, partitions$training)
library(rsparkling)
training <- as_h2o_frame(sc, partitions$training)
table(mtcars$carb)
lenght(mtcars$carb)
length(mtcars$carb)
table(mtcars$carb)/32
stringr
library(stringr)
?str_which
detach(package:stringr,unload = T)
install.packages("strignr")
install.packages("strigr")
install.packages("stringr")
stringr
package_version("stringr")
package_version(stringr)
?package.description()
?packageVersion
packageVersion(stringr)
packageVersion("stringr")
?str_which
?str_which()
library(stringr)
?str_which()
fruit <- c("apple", "banana", "pear", "pinapple")
str_which(fruit, "a")
load("~/Desktop/custodia/modelo_final_custodia.rda")
?predict
predict(mod_fit6,test,type="prob")
predict(mod_fit5,test,type="prob")
predict(mod_fit2,test,type="prob")
library(caret)
ggplot(varImp(mod_fit1))
ggplot(varImp(mod_fit2))
?varImp
library(cowplot)
?plot_grid
grid10 <- expand.grid( .winnow = FALSE, .trials=40, .model="tree",.cost=1:10)
mod_fit10 <- train(decisao ~ .,  data=train, method = "C5.0Cost",
trControl = ctrl,
tuneLength = 5,tuneGrid=grid10)
ctrl <- trainControl(method = "repeatedcv",
number = 10,
repeats = 5,
summaryFunction = twoClassSummary,
#   classProbs = TRUE,
savePredictions = TRUE,
allowParallel = TRUE,
sampling="up"
)
mod_fit10 <- train(decisao ~ .,  data=train, method = "C5.0Cost",
trControl = ctrl,
tuneLength = 5,tuneGrid=grid10,metric="ROC")
mod_lista<-list(mod_fit1,mod_fit2,mod_fit3,mod_fit4,mod_fit5,mod_fit6,mod_fit7)
a<-lapply(mod_lista,function(x) ggplot(varImp(x)))
ggplot(varImp(mod_fit3))
ggplot(varImp(mod_fit4))
ggplot(varImp(mod_fit5))
a<-lapply(mod_lista[-5],function(x) ggplot(varImp(x)))
a
plot_grid(a)
class(a)
a
a[[1]]
a[[2]]
a[[3]]
a[[4]]
a[[5]]
a[[6]]
a[[7]]
?plot_grid
plot_grid(plotlist = a)
?scale_fill_manual
a<-lapply(mod_lista[-5],function(x) ggplot(varImp(x))+scale_fill_brewer(palette = 1))
plot_grid(plotlist = a)
scale_fill_brewer()
?scale_fill_brewer()
a<-lapply(mod_lista[-5],function(x) ggplot(varImp(x))+scale_colour_brewer(palette = "Greens"))
plot_grid(plotlist = a)
a<-lapply(mod_lista[-5],function(x) ggplot(varImp(x))+scale_fill_brewer(palette = "Greens"))
plot_grid(plotlist = a)
ggplot(varImp(mod_fit1))
ggplot(varImp(mod_fit1))+scale_fill_brewer(palette = "Greens")
ggplot(varImp(mod_fit1))+scale_colour_brewer(palette = "Greens")
ggplot(varImp(mod_fit1))+scale_fill_manual(values="red")
ggplot(varImp(mod_fit1))+scale_color_manual(values="red")
ggplot(varImp(mod_fit1))+labs(x="arroz")
a<-lapply(mod_lista[-5],function(x) ggplot(varImp(x))+labs=(x="Variáveis", y="Importância"))
a<-lapply(mod_lista[-5],function(x) ggplot(varImp(x))+labs(x="Variáveis", y="Importância"))
plot_grid(a)
plot_grid(plotlist = a)
?ggtitle
a<-lapply(mod_lista[-5],function(x) ggplot(varImp(x))+labs(x="Variáveis", y="Importância",title=list("a","b","c","d","e","f")))
plot_grid(plotlist = a)
a<-lapply(mod_lista[-5],function(x) ggplot(varImp(x))+labs(x="Variáveis", y="Importância",title=c("a","b","c","d","e","f")))
plot_grid(plotlist = a)
a<-lapply(mod_lista[-5],function(x) ggplot(varImp(x))+labs(x="Variáveis", y="Importância")+ggtitle(list("a","b","c","d","e","f")))
plot_grid(plotlist = a)
?plot_grid
plot_grid(plotlist = a,labels=list("a","b","c","d","e","f"))
a<-lapply(mod_lista[-5],function(x) ggplot(varImp(x))+labs(x="Variáveis", y="Importância"))
plot_grid(plotlist = a,labels=list("a","b","c","d","e","f"))
plot_grid(plotlist = a)
plot_grid(plotlist = a,labels=auto)
plot_grid(plotlist = a,labels="AUTO")
plot_grid(plotlist = a,labels=c("GLM","GBM","SVM","RPART","RF","KNN"))
plot_grid(plotlist = a,labels=c("GLM","GBM","SVM","RPART","RF","KNN"),vjust=-.5)
ggsave("grid.pdf",height=10)
ggsave("grid.pdf",height=10,width = 15)
library(lubridate)
dmy("31081974")
?dmy()
Sys.getlocale()
Sys.setlocale()
?Sys.setlocale()
Sys.setlocale("LC_TIME","bra")
Sys.setlocale("LC_TIME","br")
Sys.setlocale("LC_TIME","BRA")
Sys.localeconv()
Sys.getlocale(category = "LC_ALL")
Sys.setlocale("LC_TIME","pt_BR")
Sys.getlocale()
dmy("31081974")
?dmy
dmy("31081974",locale = Sys.setlocale("LC_TIME","pt_BR"))
system("locale -a")
dmy("31081974",locale = "pt_BR.UTF-8")
?format
format(dmy("31081974"),"%d%m%y")
as.Date.character("31081974")
format("31081974")
as.Date("31081974",format="d%/m%/y%")
as.Date()
?as.Date()
Sys.Date()
body=list(conversationId="",
dadosConsulta.pesquisaLivre="lei maria da penha",
tipoNumero="UNIFICADO",
numeroDigitoAnoUnificado="",
foroNumeroUnificado="",
dadosConsulta.nuProcesso="",
dadosConsulta.nuProcessoAntigo="",
classeTreeSelection.values="",
classeTreeSelection.text="",
assuntoTreeSelection.values="",
assuntoTreeSelection.text="",
agenteSelectedEntitiesList="",
contadoragente=0,
contadorMaioragente=0,
cdAgente="",
nmAgente="",
dadosConsulta.dtInicio="",
dadosConsulta.dtFim="",
varasTreeSelection.values="",
varasTreeSelection.text="",
dadosConsulta.ordenacao="DESC")
a<-httr::POST("http://esaj.tjsp.jus.br/cjpg/pesquisar.do?",
body=body)
b<- htmlParse(httr::content(a,as="text"), encoding = "UTF-8")
library(httr)
library(XML)
val<-xmlGetAttr(getNodeSet(b, "//*[@bgcolor='#EEEEEE']"),"value")
b<- htmlParse(httr::content(a,as="text"), encoding = "UTF-8")
b
b
a
val<-xmlGetAttr(getNodeSet(b, "//*[@bgcolor='#EEEEEE']"),"value")
b<-htmlParse(a)
b
val<-xmlGetAttr(getNodeSet(b, "//*[@bgcolor='#EEEEEE']"),"value")
?htmlParse
xpathSApply(b,"//*[@bgcolor='#EEEEEE']",xmlValue)
xpathSApply(b,"//*[@bgcolor='#EEEEEE']",xmlValue,trim=T)
xpathSApply(b,"//*[@bgcolor='#EEEEEE'][1]",xmlValue,trim=T)
xpathSApply(b,"//*[@bgcolor='#EEEEEE'][1]",xmlValue,trim=T)[1]
val<-xpathSApply(b,"//*[@bgcolor='#EEEEEE'][1]",xmlValue,trim=T)[1]
str_extract(val,"\\d+$")
library(stringr)
str_extract(val,"\\d+$")
val<-str_extract(val,"\\d+$")
num <- as.numeric(val)
max_pag <- ceiling(num/10)
max_pag
df<-data.frame()
for (i in 1:max_pag){
tryCatch({
c <- GET(paste0("http://esaj.tjsp.jus.br/cjpg/trocarDePagina.do?pagina=",i,"&conversationId="), set_cookies(unlist(a$cookies)))
d<- htmlParse(httr::content(c, as= "text"), encoding = "UTF-8")
# O recurso e o assunto estĆ£o no mesmo lugar
processo<-xpathSApply(d,'//*[@class="fonteNegrito"]',xmlValue,trim=T)
classe<-xpathSApply(d,'//*[@class="fonte"][2]',xmlValue,trim=T)
assunto<-xpathSApply(d,'//*[@class="fonte"][3]',xmlValue,trim=T)
magistrado<-xpathSApply(d,'//*[@class="fonte"][4]',xmlValue,trim=T)
comarca<-xpathSApply(d,'//*[@class="fonte"][5]',xmlValue,trim=T)
foro<-xpathSApply(d,'//*[@class="fonte"][6]',xmlValue,trim=T)
vara<-xpathSApply(d,'//*[@class="fonte"][7]',xmlValue,trim=T)
data<-xpathSApply(d,'//*[@class="fonte"][8]',xmlValue,trim=T)
assunto<-xpathSApply(d,'//*[@class="fonte"][9]',xmlValue,trim=T)
# Junta tudo
df1<-data.frame(processo,classe,assunto,comarca,foro,vara,data,assunto)
df<-rbind(df,df1)
},
error=function(m){
m
},
finally={
next
})
}
u<-"ftp://jose:446644@192.168.1.100/jose/TJSP/audiencia de custodia/custodia.rda"
w<-tempfile()
download.file(u,w)
load(w)
testar_processo
devtools::install_github("jjesusfilho/captchaSajAudio")
setwd("~/Documents/tjsp")
